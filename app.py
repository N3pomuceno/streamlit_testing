import streamlit as st
import pandas as pd
import random
# import io
# import os
import util

HOST = st.secrets["HOST"]
PORT = st.secrets["PORT"]
APP_SECRET_GMAIL = st.secrets["APP_SECRET_UFF_MAIL"]
APP_SECRET_GMAIL_PASSWORD = st.secrets["APP_SECRET_UFF_PASSWORD"]
APP_SECRET_UFF_RECEIVER = st.secrets["APP_SECRET_UFF_RECEIVER"]
APP_ANALISE= st.secrets["APP_ANALISE"]

# Config Session States
if 'check_email' not in st.session_state:
    if util.check_login(APP_SECRET_GMAIL, APP_SECRET_GMAIL_PASSWORD, HOST, PORT):
        st.session_state.check_email = True
    else:
        raise Exception("Erro ao validar o email, por favor entrar em contato com o administrador do sistema.")


# Configurar o modo wide
st.set_page_config(layout="wide", page_title="Avalia√ß√£o LLM", page_icon='ü§ñ')


CSV_FILE_ORIGIN = "data/fr0.csv"


# Fun√ß√£o para carregar os textos a partir de um CSV
@st.cache_data
def load_texts():
    return pd.read_csv("data/fr0.csv")


# Fun√ß√£o para selecionar dois textos aleat√≥rios
def select_random_texts(df):
    pair = random.sample(df.index.tolist(), 2)
    return df.loc[pair[0]], df.loc[pair[1]]


# T√≠tulo
st.title("Avalia√ß√£o LLM ü§ñ")

df = pd.read_csv(CSV_FILE_ORIGIN)
fr = df['fr'][0]
# Instru√ß√µes
st.markdown(f"""
### Bem-vindo!

O objetivo deste aplicativo √© avaliar a qualidade de textos gerados por um modelo de linguagem.
Abaixo voc√™ encontrar√° dois textos gerados por modelos.
Leia os textos e responda as perguntas de avalia√ß√£o.

Veja o fato relevante abaixo para entender de onde os textos foram gerados.

""")
with st.expander("Fato Relevante", expanded=True):
    st.write(f'''
        {fr}
    ''')


# Carrega os textos
textos_df = load_texts()

# Seleciona dois textos aleat√≥rios
texto1, texto2 = select_random_texts(textos_df)

# Apresenta os textos
st.markdown("### Textos Selecionados")
col1, col2 = st.columns(2)

with col1:
    st.header("An√°lise 1")
    texto1["generated_text"] = texto1["generated_text"].replace("# ", "### ").replace("## ", "### ")
    st.markdown(texto1["generated_text"])

with col2:
    st.header("An√°lise 2")
    texto2["generated_text"] = texto2["generated_text"].replace("# ", "### ").replace("## ", "### ")
    st.markdown(texto2["generated_text"])

# Formul√°rio para avalia√ß√£o
st.markdown("### Avalia√ß√£o")
with st.form("avaliacao_form"):
    st.write("Responda as perguntas abaixo:")
    
    resposta0 = st.radio("Alguma das an√°lises apresentou informa√ß√µes incorretas ou inconsistentes em rela√ß√£o aos documentos financeiros analisados?", 
                         ["Nenhuma apresentou erro",
                          "A an√°lise A apresentou erro", 
                          "A an√°lise B apresentou erro", 
                          "Ambas apresentaram erros"]) 

    resposta1 = st.radio("Qual an√°lise √© mais f√°cil de compreender, considerando estrutura, linguagem e clareza?", 
                         ["An√°lise 1", 
                          "An√°lise 2", 
                          "Ambas t√™m o mesmo n√≠vel de clareza."]) 

    resposta2 = st.radio("Qual an√°lise fornece as informa√ß√µes mais relevantes e aderentes ao fato relevante do documento?", 
                         ["An√°lise A", 
                          "An√°lise B", 
                          "Ambas s√£o igualmente informativas"])

    resposta3 = st.radio("De maneira geral, qual an√°lise voc√™ considera mais √∫til para a tomada de decis√µes?", 
                         ["An√°lise A", 
                          "An√°lise B", 
                          "Ambas igualmente √∫teis"])

    comentarios = st.text_area("Voc√™ gostaria de comentar algo sobre as an√°lises apresentadas? (Opcional)")
    enviado = st.form_submit_button("Enviar")

    if enviado:
        
        # Adicionar os novos dados
        novo_dado = {
            "Texto 1": [texto1["generated_text"]],
            "Texto 2": [texto2["generated_text"]],
            "Resposta 0": [resposta0],
            "Resposta 1": [resposta1],
            "Resposta 2": [resposta2],
            "Resposta 3": [resposta3],
            "Coment√°rios": [comentarios], 
        }

        df = pd.DataFrame(novo_dado)

        # Converter para CSV em mem√≥ria
        csv_content = util.dataframe_para_csv(df)

        try:
            # Salvar os dados
            util.send_email(APP_SECRET_GMAIL, 
                            APP_SECRET_GMAIL_PASSWORD, 
                            "Avalia√ß√£o LLM", 
                            APP_SECRET_UFF_RECEIVER, 
                            "Avalia√ß√£o LLM", 
                            csv_content, 
                            'Data.csv', 
                            HOST, 
                            PORT)
            st.success("Respostas enviadas com sucesso!")
        except Exception as e:
            st.error(f"Erro ao salvar os dados: {e}")
        
st.text(APP_ANALISE)